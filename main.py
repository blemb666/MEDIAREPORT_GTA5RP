import asyncio
import requests
from twitchio.ext import commands
import os
# By Sobyanin
# Sebastayn Suleimanov

# üëâ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ)
TWITCH_CLIENT_ID = 'p063h8nr6c7i7w8zcn96489x6e26pv' # –ë–æ—Ç dev.twitch
TWITCH_ACCESS_TOKEN = os.environ['token']  # token twitch 
BROADCASTER_ID = os.environ['id']     # ID twitch
DISCORD_WEBHOOK_URL = os.environ['webhook_discord']
CHANNEL_VIEW = os.environ['channel_suspect']
MEDIA_name = os.environ['MEDIA_name']


class Bot(commands.Bot):

    def __init__(self):
        super().__init__(
            token=TWITCH_ACCESS_TOKEN,
            client_id=TWITCH_CLIENT_ID,
            prefix='!',
            initial_channels=[CHANNEL_VIEW]  # –±–µ–∑ #
        )

    async def event_ready(self):
        print(f'‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.nick}')

    # async def event_message(self, message):
    #     await self.handle_commands(message)

    @commands.command(name='report')
    async def form(self, ctx: commands.Context):
        print(f"Running by: {ctx.author}")  # –í –Ω–∞—á–∞–ª–µ –º–µ—Ç–æ–¥–∞ form()
        content = ctx.message.content
        if not content:
            await ctx.reply("–û—à–∏–±–∫–∞: –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
            return

        parts = content.split(' ', 2)
        if len(parts) < 3:
            await ctx.reply("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π: !report {id,id,id} {reason}")
            return

        form_id = parts[1]
        reason = parts[2]

        clip_url = await self.create_clip()
        if not clip_url:
            await ctx.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–ø–∞.")
            return

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Twitch
        await ctx.reply("–ñ–∞–ª–æ–±–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞.")
        print(f"–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞: {ctx.message.content}")  # –í –Ω–∞—á–∞–ª–µ –º–µ—Ç–æ–¥–∞ form()
        print(f"Clip URL: {clip_url}")  # –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–ø–∞

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è Discord
        discord_content = f"<@244135967378767872> <#690851125511061515>\n```{MEDIA_name}\n{form_id} - {reason}\n{clip_url}\n<@&697172798845485137> <@&697172317872324648>```\n-#message by {ctx.author}"

        # –û—Ç–ø—Ä–∞–≤–∫–∞ Webhook
        try:
            requests.post(DISCORD_WEBHOOK_URL, json={"content": discord_content})
        except Exception as e:
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord:", e)

    async def create_clip(self):
        url = "https://api.twitch.tv/helix/clips"
        headers = {
            "Client-ID": TWITCH_CLIENT_ID,
            "Authorization": f"Bearer {TWITCH_ACCESS_TOKEN}"
        }
        data = {
            "broadcaster_id": BROADCASTER_ID
        }

        response = requests.post(url, headers=headers, data=data)

        if response.status_code == 202:
            clip_data = response.json().get("data", [])
            if clip_data and "id" in clip_data[0]:
                clip_id = clip_data[0]["id"]
                await asyncio.sleep(5)  # –ø–æ–¥–æ–∂–¥–∞—Ç—å, –ø–æ–∫–∞ –∫–ª–∏–ø —Å–æ–∑–¥–∞—Å—Ç—Å—è
                return f"https://clips.twitch.tv/{clip_id}"

        print("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–ø–∞:", response.text)
        return None

# üîÅ –ó–∞–ø—É—Å–∫

bot = Bot()

bot.run()
